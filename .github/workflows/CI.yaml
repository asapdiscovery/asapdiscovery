name: CI

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
  schedule:
    # Nightly tests run on main by default:
    #   Scheduled workflows run on the latest commit on the default or base branch.
    #   (from https://help.github.com/en/actions/reference/events-that-trigger-workflows#scheduled-events-schedule)
    - cron: "0 0 * * *"
  workflow_dispatch:

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

defaults:
  run:
    shell: bash -l {0}

jobs:
  test:
    name: Test on ${{ matrix.os }}, Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macOS-latest, ubuntu-latest]
        python-version: ["3.9", "3.10"]

    env:
      OE_LICENSE: ${{ github.workspace }}/oe_license.txt

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Get Info About Runner
      run: |
        uname -a
        df -h
        ulimit -a

    # More info on options: https://github.com/mamba-org/provision-with-micromamba
    - name: Setup Conda Environment
      uses: mamba-org/provision-with-micromamba@main
      with:
        environment-file: devtools/conda-envs/asapdiscovery.yaml
        environment-name: asapdiscovery
        channels: jaimergp/label/unsupported-cudatoolkit-shim,conda-forge,openeye,dglteam
        extra-specs: |
          python==${{ matrix.python-version }}

    - name: Test OE License & Write License to File
      env:
        OE_LICENSE_TEXT: ${{ secrets.OE_LICENSE }}
      run: |
        echo "${OE_LICENSE_TEXT}" > ${OE_LICENSE}
        python -c "import openeye; assert openeye.oechem.OEChemIsLicensed(), 'OpenEye license checks failed!'"

    - name: Install packages
      run: |
        python -m pip install ./asapdiscovery-data --no-deps
        python -m pip install ./asapdiscovery-dataviz --no-deps
        python -m pip install ./asapdiscovery-docking --no-deps
        python -m pip install ./asapdiscovery-ml --no-deps
        python -m pip install ./asapdiscovery-simulation --no-deps
        micromamba list


    - name: Run tests
      run: |
        # run each package test suite; append to coverage file
        coverage run --append --source=./asapdiscovery-data/asapdiscovery/data/ -m pytest -v  --color=yes ./asapdiscovery-data/asapdiscovery/data/tests/
        coverage run --append --source=./asapdiscovery-dataviz/asapdiscovery/dataviz/ -m pytest -v  --color=yes ./asapdiscovery-dataviz/asapdiscovery/dataviz/tests/
        coverage run --append --source=./asapdiscovery-docking/asapdiscovery/docking/ -m pytest -v  --color=yes ./asapdiscovery-docking/asapdiscovery/docking/tests/
        coverage run --append --source=./asapdiscovery-ml/asapdiscovery/ml/ -m pytest -v  --color=yes ./asapdiscovery-ml/asapdiscovery/ml/tests/
        # generate xml report from .coverage file
        coverage xml

    - name: Upload Code Coverage to Codecov
      uses: codecov/codecov-action@v3
      # Don't upload coverage scheduled or on fork
      if: ${{ github.repository == 'choderalab/asapdiscovery'
              && github.event != 'schedule' }}
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-${{ matrix.os }}-py${{ matrix.python-version }}
        fail_ci_if_error: true
